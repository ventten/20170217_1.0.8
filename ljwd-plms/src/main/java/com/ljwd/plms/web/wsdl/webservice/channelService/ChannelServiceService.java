
package com.ljwd.plms.web.wsdl.webservice.channelService;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 */
@WebServiceClient(name = "ChannelServiceService", targetNamespace = "http://webservice.loan.mfbms.flinkmf.com/", wsdlLocation = "http://192.168.3.241:8080/mfbms-app-web/webservice/ChannelService?wsdl")
public class ChannelServiceService extends Service {
	public static URL CHANNELSERVICESERVICE_WSDL_LOCATION;
	public final static WebServiceException CHANNELSERVICESERVICE_EXCEPTION;
	public final static QName CHANNELSERVICESERVICE_QNAME = new QName("http://webservice.loan.mfbms.flinkmf.com/", "ChannelServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://192.168.3.241:8080/mfbms-app-web/webservice/ChannelService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CHANNELSERVICESERVICE_WSDL_LOCATION = url;
        CHANNELSERVICESERVICE_EXCEPTION = e;
    }

    public ChannelServiceService() {
        super(__getWsdlLocation(), CHANNELSERVICESERVICE_QNAME);
    }

    public ChannelServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CHANNELSERVICESERVICE_QNAME, features);
    }

    public ChannelServiceService(URL wsdlLocation) {
        super(wsdlLocation, CHANNELSERVICESERVICE_QNAME);
    }

    public ChannelServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CHANNELSERVICESERVICE_QNAME, features);
    }

    public ChannelServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ChannelServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return
     *     returns ChannelService
     */
    @WebEndpoint(name = "ChannelServicePort")
    public ChannelService getChannelServicePort() {
        return super.getPort(new QName("http://webservice.loan.mfbms.flinkmf.com/", "ChannelServicePort"), ChannelService.class);
    }

    /**
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ChannelService
     */
    @WebEndpoint(name = "ChannelServicePort")
    public ChannelService getChannelServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservice.loan.mfbms.flinkmf.com/", "ChannelServicePort"), ChannelService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CHANNELSERVICESERVICE_EXCEPTION!= null) {
            throw CHANNELSERVICESERVICE_EXCEPTION;
        }
        return CHANNELSERVICESERVICE_WSDL_LOCATION;
    }

}
