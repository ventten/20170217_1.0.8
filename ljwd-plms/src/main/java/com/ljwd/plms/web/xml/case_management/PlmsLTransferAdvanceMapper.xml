<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ljwd.plms.web.dao.case_management.PlmsLTransferAdvanceMapper" >
    <resultMap id="BaseResultMap" type="com.ljwd.plms.web.model.case_management.PlmsLTransferAdvance" >
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="PAYMENT_ID" property="paymentId" jdbcType="BIGINT" />
        <result column="APPL_ID" property="applId" jdbcType="BIGINT" />
        <result column="OVERDUE_DAYS" property="overdueDays" jdbcType="BIGINT" />
        <result column="TRANSFERTYPE" property="transfertype" jdbcType="VARCHAR" />
        <result column="TRANSFERREASON" property="transferreason" jdbcType="VARCHAR" />
        <result column="APPLICANT" property="applicant" jdbcType="VARCHAR" />
        <result column="CIRCUSTATUS" property="circustatus" jdbcType="VARCHAR" />
        <result column="APPLYDATE" property="applydate" jdbcType="TIMESTAMP" />
        <result column="STATUS" property="status" jdbcType="VARCHAR" />
        <result column="REMARK" property="remark" jdbcType="VARCHAR" />
        <result column="IS_ACTIVE" property="isActive" jdbcType="CHAR" />
        <result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" />
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
        <result column="UPDATED_BY" property="updatedBy" jdbcType="VARCHAR" />
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="REC_VER" property="recVer" jdbcType="BIGINT" />
        <result column="TAG_SEQ" property="tagSeq" jdbcType="BIGINT" />
        <result column="COLLECTOR" property="collector" jdbcType="VARCHAR" />
        <result column="REFUSAL_REASON" property="refusalReason" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
    ID, PAYMENT_ID, APPL_ID, OVERDUE_DAYS, TRANSFERTYPE, TRANSFERREASON, APPLICANT, CIRCUSTATUS, 
    APPLYDATE, STATUS, REMARK, IS_ACTIVE, CREATED_BY, CREATE_TIME, UPDATED_BY, UPDATE_TIME, 
    REC_VER, TAG_SEQ,COLLECTOR,REFUSAL_REASON
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ljwd.plms.web.model.case_management.PlmsLTransferAdvanceExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from PLMS_L_TRANSFER_ADVANCE
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from PLMS_L_TRANSFER_ADVANCE
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from PLMS_L_TRANSFER_ADVANCE
    where ID = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.ljwd.plms.web.model.case_management.PlmsLTransferAdvanceExample" >
        delete from PLMS_L_TRANSFER_ADVANCE
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.ljwd.plms.web.model.case_management.PlmsLTransferAdvance" >
        <selectKey resultType="long" keyProperty="id" order="BEFORE" >
            SELECT seq_plms_l_transfer_advance.nextval FROM dual
        </selectKey>
        insert into PLMS_L_TRANSFER_ADVANCE (ID, PAYMENT_ID, APPL_ID,
        OVERDUE_DAYS, TRANSFERTYPE, TRANSFERREASON,
        APPLICANT, CIRCUSTATUS, APPLYDATE,
        STATUS, REMARK, IS_ACTIVE,
        CREATED_BY, CREATE_TIME, UPDATED_BY,
        UPDATE_TIME, REC_VER, TAG_SEQ,COLLECTOR,REFUSAL_REASON
        )
        values 
        (#{id,jdbcType=BIGINT},
        #{paymentId,jdbcType=BIGINT},
        #{applId,jdbcType=BIGINT},
        #{overdueDays,jdbcType=BIGINT},
        #{transfertype,jdbcType=VARCHAR},
        #{transferreason,jdbcType=VARCHAR},
        #{applicant,jdbcType=VARCHAR},
        #{circustatus,jdbcType=VARCHAR},
        sysdate,
        #{status,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR},
        'Y',
        #{createdBy,jdbcType=VARCHAR},
        sysdate,
        #{updatedBy,jdbcType=VARCHAR},
        sysdate,
        0,
        1,
        #{collector,jdbcType=VARCHAR},
        #{refusalReason,jdbcType=VARCHAR}
        
        )
    </insert>

    <insert id="insertSelective" parameterType="com.ljwd.plms.web.model.case_management.PlmsLTransferAdvance" >
        <selectKey resultType="long" keyProperty="id" order="BEFORE" >
            SELECT seq_plms_l_transfer_advance.nextval FROM dual
        </selectKey>
        insert into PLMS_L_TRANSFER_ADVANCE
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                ID,
            </if>
            <if test="paymentId != null" >
                PAYMENT_ID,
            </if>
            <if test="applId != null" >
                APPL_ID,
            </if>
            <if test="overdueDays != null" >
                OVERDUE_DAYS,
            </if>
            <if test="transfertype != null" >
                TRANSFERTYPE,
            </if>
            <if test="transferreason != null" >
                TRANSFERREASON,
            </if>
            <if test="applicant != null" >
                APPLICANT,
            </if>
            <if test="circustatus != null" >
                CIRCUSTATUS,
            </if>
            <if test="applydate != null" >
                APPLYDATE,
            </if>
            <if test="status != null" >
                STATUS,
            </if>
            <if test="remark != null" >
                REMARK,
            </if>
            <if test="isActive != null" >
                IS_ACTIVE,
            </if>
            <if test="createdBy != null" >
                CREATED_BY,
            </if>
            <if test="createTime != null" >
                CREATE_TIME,
            </if>
            <if test="updatedBy != null" >
                UPDATED_BY,
            </if>
            <if test="updateTime != null" >
                UPDATE_TIME,
            </if>
            <if test="recVer != null" >
                REC_VER,
            </if>
            <if test="tagSeq != null" >
                TAG_SEQ,
            </if>
            <if test="collector != null" >
                COLLECTOR,
            </if>
             <if test="refusalReason != null" >
                REFUSAL_REASON,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="paymentId != null" >
                #{paymentId,jdbcType=BIGINT},
            </if>
            <if test="applId != null" >
                #{applId,jdbcType=BIGINT},
            </if>
            <if test="overdueDays != null" >
                #{overdueDays,jdbcType=BIGINT},
            </if>
            <if test="transfertype != null" >
                #{transfertype,jdbcType=VARCHAR},
            </if>
            <if test="transferreason != null" >
                #{transferreason,jdbcType=VARCHAR},
            </if>
            <if test="applicant != null" >
                #{applicant,jdbcType=VARCHAR},
            </if>
            <if test="circustatus != null" >
                #{circustatus,jdbcType=VARCHAR},
            </if>
            <if test="applydate != null" >
                #{applydate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null" >
                #{isActive,jdbcType=CHAR},
            </if>
            <if test="createdBy != null" >
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null" >
                #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="recVer != null" >
                #{recVer,jdbcType=BIGINT},
            </if>
            <if test="tagSeq != null" >
                #{tagSeq,jdbcType=BIGINT},
            </if>
            <if test="collector != null" >
                #{collector,jdbcType=VARCHAR},
            </if>
            <if test="refusalReason != null" >
                #{refusalReason,jdbcType=VARCHAR},
            </if>
            
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ljwd.plms.web.model.case_management.PlmsLTransferAdvanceExample" resultType="java.lang.Integer" >
        select count(*) from PLMS_L_TRANSFER_ADVANCE
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update PLMS_L_TRANSFER_ADVANCE
        <set >
            <if test="record.id != null" >
                ID = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.paymentId != null" >
                PAYMENT_ID = #{record.paymentId,jdbcType=BIGINT},
            </if>
            <if test="record.applId != null" >
                APPL_ID = #{record.applId,jdbcType=BIGINT},
            </if>
            <if test="record.overdueDays != null" >
                OVERDUE_DAYS = #{record.overdueDays,jdbcType=BIGINT},
            </if>
            <if test="record.transfertype != null" >
                TRANSFERTYPE = #{record.transfertype,jdbcType=VARCHAR},
            </if>
            <if test="record.transferreason != null" >
                TRANSFERREASON = #{record.transferreason,jdbcType=VARCHAR},
            </if>
            <if test="record.applicant != null" >
                APPLICANT = #{record.applicant,jdbcType=VARCHAR},
            </if>
            <if test="record.circustatus != null" >
                CIRCUSTATUS = #{record.circustatus,jdbcType=VARCHAR},
            </if>
            <if test="record.applydate != null" >
                APPLYDATE = #{record.applydate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null" >
                STATUS = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null" >
                REMARK = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.isActive != null" >
                IS_ACTIVE = #{record.isActive,jdbcType=CHAR},
            </if>
            <if test="record.createdBy != null" >
                CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedBy != null" >
                UPDATED_BY = #{record.updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null" >
                UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.recVer != null" >
                REC_VER = #{record.recVer,jdbcType=BIGINT},
            </if>
            <if test="record.tagSeq != null" >
                TAG_SEQ = #{record.tagSeq,jdbcType=BIGINT},
            </if>
            <if test="record.collector != null" >
                COLLECTOR = #{record.collector,jdbcType=VARCHAR},
            </if>
            <if test="record.refusalReason != null" >
                REFUSAL_REASON = #{record.refusalReason,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update PLMS_L_TRANSFER_ADVANCE
        set ID = #{record.id,jdbcType=BIGINT},
        PAYMENT_ID = #{record.paymentId,jdbcType=BIGINT},
        APPL_ID = #{record.applId,jdbcType=BIGINT},
        OVERDUE_DAYS = #{record.overdueDays,jdbcType=BIGINT},
        TRANSFERTYPE = #{record.transfertype,jdbcType=VARCHAR},
        TRANSFERREASON = #{record.transferreason,jdbcType=VARCHAR},
        APPLICANT = #{record.applicant,jdbcType=VARCHAR},
        CIRCUSTATUS = #{record.circustatus,jdbcType=VARCHAR},
        APPLYDATE = #{record.applydate,jdbcType=TIMESTAMP},
        STATUS = #{record.status,jdbcType=VARCHAR},
        REMARK = #{record.remark,jdbcType=VARCHAR},
        IS_ACTIVE = #{record.isActive,jdbcType=CHAR},
        CREATED_BY = #{record.createdBy,jdbcType=VARCHAR},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        UPDATED_BY = #{record.updatedBy,jdbcType=VARCHAR},
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
        REC_VER = #{record.recVer,jdbcType=BIGINT},
        TAG_SEQ = #{record.tagSeq,jdbcType=BIGINT},
        COLLECTOR = #{record.collector,jdbcType=VARCHAR},
        REFUSAL_REASON = #{record.refusalReason,jdbcType=VARCHAR}
        
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ljwd.plms.web.model.case_management.PlmsLTransferAdvance" >
        update PLMS_L_TRANSFER_ADVANCE
        <set >
            <if test="paymentId != null" >
                PAYMENT_ID = #{paymentId,jdbcType=BIGINT},
            </if>
            <if test="applId != null" >
                APPL_ID = #{applId,jdbcType=BIGINT},
            </if>
            <if test="overdueDays != null" >
                OVERDUE_DAYS = #{overdueDays,jdbcType=BIGINT},
            </if>
            <if test="transfertype != null" >
                TRANSFERTYPE = #{transfertype,jdbcType=VARCHAR},
            </if>
            <if test="transferreason != null" >
                TRANSFERREASON = #{transferreason,jdbcType=VARCHAR},
            </if>
            <if test="applicant != null" >
                APPLICANT = #{applicant,jdbcType=VARCHAR},
            </if>
            <if test="circustatus != null" >
                CIRCUSTATUS = #{circustatus,jdbcType=VARCHAR},
            </if>
            <if test="applydate != null" >
                APPLYDATE = #{applydate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                STATUS = #{status,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                REMARK = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null" >
                IS_ACTIVE = #{isActive,jdbcType=CHAR},
            </if>
            <if test="createdBy != null" >
                CREATED_BY = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null" >
                UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null" >
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="recVer != null" >
                REC_VER = #{recVer,jdbcType=BIGINT}+1,
            </if>
            <if test="tagSeq != null" >
                TAG_SEQ = #{tagSeq,jdbcType=BIGINT},
            </if>
            <if test="collector != null" >
                COLLECTOR = #{collector,jdbcType=VARCHAR},
            </if>
            <if test="refusalReason != null" >
                REFUSAL_REASON = #{refusalReason,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ljwd.plms.web.model.case_management.PlmsLTransferAdvance" >
    update PLMS_L_TRANSFER_ADVANCE
    set PAYMENT_ID = #{paymentId,jdbcType=BIGINT},
      APPL_ID = #{applId,jdbcType=BIGINT},
      OVERDUE_DAYS = #{overdueDays,jdbcType=BIGINT},
      TRANSFERTYPE = #{transfertype,jdbcType=VARCHAR},
      TRANSFERREASON = #{transferreason,jdbcType=VARCHAR},
      APPLICANT = #{applicant,jdbcType=VARCHAR},
      CIRCUSTATUS = #{circustatus,jdbcType=VARCHAR},
      APPLYDATE = #{applydate,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      IS_ACTIVE = #{isActive,jdbcType=CHAR},
      CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      REC_VER = #{recVer,jdbcType=BIGINT},
      TAG_SEQ = #{tagSeq,jdbcType=BIGINT},
      COLLECTOR = #{collector,jdbcType=VARCHAR},
      REFUSAL_REASON = #{refusalReason,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>

    <!-- 提前移交分页 -->
    <select id="selectTransferAdvanceAndPage" resultType="com.ljwd.plms.web.vo.case_management.PlmsLTransferAdvanceResult" parameterType="com.ljwd.plms.web.vo.case_management.PlmsLTransferAdvanceParam">
        select
        transfer.id as id,
        transfer.appl_id as applid,
        transfer.payment_id as paymentid,
        pool.cntrct_no as cntrctno,
        pool.cust_name as custname,
        pool.loan_amt as loanamt,
        transfer.overdue_days as overduedays,
        type.val as transfertype,
        transfer.transferreason as transferreason,
        sysuser.user_name as applicant,
        transfer.circustatus as circustatus,
        rset.name as circustatusname,
        transfer.applydate as applydate,
        transfer.status as status,
        transfer.REFUSAL_REASON as refusalReason
        from plms_l_transfer_advance transfer
        inner join(
        select pool.PAYMENT_ID,pool.APPL_ID,pool.CNTRCT_NO,pool.CUST_NAME ,pool.LOAN_AMT from
        plms_work_order_pool pool
        <!-- where pool.status = (select status from plms_collection_rule_set where circu_rule_code = 'TRANINAD' and is_active='Y') -->
        <where>
            <if test='cntrctNo !=null and cntrctNo !="" '>
                and pool.cntrct_no = #{cntrctNo}
            </if>
            <if test='custName !=null and custName !=""'>
                and pool.cust_name = #{custName}
            </if>
            <if test='scopeList !=null and scopeList !=""'>
                and pool.status in
                <foreach item="item" index="index" collection="scopeList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        )pool on pool.payment_id = transfer.payment_id
        inner join plms_l_transfer_type type on type.code = transfer.transfertype and type.is_active = 'Y'
        inner join plms_collection_rule_set rset on rset.status = transfer.circustatus
        left join  sys_user sysuser on sysuser.user_id = transfer.applicant
        where <!-- transfer.status != 'CLEAR' -->1=1
            <if test='transfertype != "all"'>
                and transfer.TRANSFERTYPE = #{transfertype}
            </if>
            <if test='status != "all"'>
                and transfer.status = #{status}
            </if>
            <if test='applyDateStart !=null and applyDateStart != "" '>
                and trunc(transfer.applydate) >= #{applyDateStart}
            </if>
            <if test='applyDateEnd !=null and applyDateEnd !=""'>
                and trunc(transfer.applydate) &lt;= #{applyDateEnd}

            </if>
        order by applydate desc,id
    </select>

    <!-- 批量修改提前移交的数据状态 -->
    <update id="updateBatch" parameterType="java.util.List">
        begin
        <foreach collection="list" item="item" index="index" separator=";" >
            update PLMS_L_TRANSFER_ADVANCE
            <set>
                REC_VER = #{item.recVer} + 1,
                <if test="item.status!=null and item.status!=''">
                    STATUS = #{item.status},
                </if>
                <if test="item.updateTime!=null and item.updateTime!=''">
                    UPDATE_TIME = #{item.updateTime},
                </if>
                <if test="item.updatedBy!=null and item.updatedBy!=''">
                    UPDATED_BY = #{item.updatedBy},
                </if>
                <if test="item.refusalReason!=null and item.refusalReason!=''">
                    REFUSAL_REASON = #{item.refusalReason},
                </if>
            </set>
            where ID = #{item.id}
        </foreach>
        ;end;
    </update>

    <!-- 根据paymentId查询 -->
    <select id="selectMaxDateTransferAdvanceByPaymentId" parameterType="map" resultMap="BaseResultMap">
    	select
    	tr.id,tr.payment_id,tr.appl_id, tr.overdue_days, tr.transfertype, tr.transferreason, tr.applicant,
  		tr.circustatus, tr.applydate, tr.status, tr.remark, tr.is_active ,tr.collector
	    from PLMS_L_TRANSFER_ADVANCE tr
	    inner join (select max(update_time) maxdate,payment_id from plms_l_transfer_advance 
	    where payment_id = #{paymentId} group by payment_id)temp
		on temp.payment_id = tr.payment_id and tr.update_time>=temp.maxDate  
    </select>

    <!--根据借款IDS和状态查找-->
    <select id="selectByApplIdsAndStatusS" resultMap="BaseResultMap" parameterType="map">
        select advance.*,
               cntrct.CNTRCT_NO as cntrctNo
        from PLMS_L_TRANSFER_ADVANCE advance
        inner join LN_CNTRCT cntrct on advance.APPL_ID = cntrct.APPL_ID
        where 1 = 1
        <if test="statusS != null">
            and advance.STATUS IN <foreach collection="statusS" item="item" open="(" close=")" separator=",">#{item,jdbcType=VARCHAR}</foreach>
        </if>
        <if test="applIds != null">
            and cntrct.APPL_ID IN <foreach collection="applIds" item="item" open="(" close=")" separator=",">#{item,jdbcType=BIGINT}</foreach>
        </if>
    </select>

</mapper>